require("os")
local io = require("io")
local man = require("man")
local pathutil = require("path")
local proc = require("proc")
local string = require("string")
local strutil = require("string-util")
local validator = require("validators")
local users = require("/system/lib/users")

local args = {
  {name="NAME", description="uid/username", required=true}
}
local flags = {
  {short="p", long = "password", description = "password"},
}
local man_obj = man.man("users", "List users", args, flags)

local cwd = OS.cwd()
local argc,argv = OS.args()
local argt = strutil.parse_args(argv, args, flags)
if (man.try_print(argt, man_obj)) then return end
if (#argt > 2) then error("invalid number of arguments") end

local puid = proc.info().uid
local uid = tonumber(argt[2])
if (uid == nil) then
  local user = users:from_name(argt[2])
  if (user == nil) then uid = puid else uid = user.uid end
end

if (puid ~= uid and puid ~= 0) then
  error('no permission')
end

local password = argt['password'] or argt['p']
if (password == nil) then
  while (1) do
    io.IO.write("Enter new password: ")
    password = io.IO.read()
    local status, data = pcall(function() validator:minlen(password, 4) end)
    if (status) then break end
    print(data)
  end
else
  validator:minlen(password, 4)
end

users:passwd(uid, password)